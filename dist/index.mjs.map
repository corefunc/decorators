{"version":3,"file":"index.mjs","sources":["../src/property/instance.mjs","../src/method/attempt.mjs","../src/method/console-group.mjs","../src/method/measure-execution.mjs"],"sourcesContent":["/**\n * @name Instance\n * @namespace property\n * @param {Function} constructor Class constructor.\n * @param {boolean=} [silent=true] Suppress error.\n * @returns {Function}\n * @example\n * ```javascript\n * class ClassAlpha {\n *   name;\n * }\n * class ClassBeta {\n *   @Instance(ClassAlpha)\n *   alpha;\n *   constructor(alpha) {\n *    this.alpha = alpha;\n *   }\n * }\n * const beta = new ClassBeta({ name: 'ALPHA' });\n * beta.alpha; // ClassAlpha\n * ```\n * @since 0.0.4\n */\nexport function Instance(constructor, silent = true) {\n  return (target, key) => {\n    if (target[key] instanceof constructor) {\n      return;\n    }\n    let original = target[key];\n    Reflect.deleteProperty(target, key);\n    Reflect.defineProperty(target, key, {\n      configurable: true,\n      enumerable: true,\n      get: () => original,\n      set: (properties) => {\n        if (silent) {\n          try {\n            original = new constructor(properties);\n          } catch {\n            //\n          }\n        } else {\n          original = new constructor(properties);\n        }\n      },\n    });\n  };\n}\n\n/**\n * @name Instance\n * @namespace property\n * @param {Function} constructor Class constructor.\n * @param {boolean=} [silent=true] Suppress error.\n * @returns {Function}\n * @example\n * ```javascript\n * class ClassAlpha {\n *   name;\n * }\n * class ClassBeta {\n *   @Instance(ClassAlpha)\n *   alpha;\n *   constructor(alpha) {\n *    this.alpha = alpha;\n *   }\n * }\n * const beta = new ClassBeta({ name: 'ALPHA' });\n * beta.alpha; // ClassAlpha\n * ```\n * @since 0.0.5\n */\nexport function instance(constructor, silent = true) {\n  return Instance(constructor, silent);\n}","/**\n * @name attempt\n * @namespace method\n * @param {Function} handlerFunction Function to handle error, accepts one argument - actual error\n * @returns {Function}\n * @example\n * ```javascript\n * class Kitty {\n *   @attempt((error: Error, args: any[]) => {\n *     console.warn(\"Exception thrown!\");\n *     console.log(error.message); // \"uwu\"\n *     console.dir(args); // [ 10, false ]\n *   })\n *   meow(volume: number, cute = true) {\n *     throw new Error(\"uwu\");\n *   }\n * }\n * new Kitty().meow(10, false);\n * ```\n * @since 0.0.1\n */\nexport function attempt(handlerFunction) {\n  return function attemptDecorator(_target, _key, descriptor) {\n    const originalMethod = descriptor.value;\n    if (Object.prototype.toString.call(originalMethod) === \"[object AsyncFunction]\") {\n      descriptor.value = async function (...args) {\n        try {\n          const value = await originalMethod.apply(this, args);\n          if (value !== undefined && value.catch) {\n            value.catch((error) => handlerFunction(error, args));\n          }\n          return value;\n        } catch (error) {\n          handlerFunction(error, args);\n        }\n      };\n    } else {\n      descriptor.value = function (...args) {\n        try {\n          return originalMethod.apply(this, args);\n        } catch (error) {\n          handlerFunction(error, args);\n        }\n      };\n    }\n  };\n}\n","/**\n * @name consoleGroup\n * @namespace method\n * @param {string} label Decorates method with inline group in the Web Console log.\n * @returns {Function}\n * @example\n * ```javascript\n * class Class {\n *   @consoleGroup(\"GROUP ASYNC\")\n *   async asyncRun() {\n *     console.log(\"I'm async\");\n *   }\n *   @consoleGroup(\"GROUP SYNC\")\n *   syncRun() {\n *     console.log(\"I'm sync\");\n *   }\n * }\n * const test = new Class();\n * test.syncRun();\n * await test.asyncRun();\n * @since 0.0.3\n */\nexport function consoleGroup(label) {\n  return function consoleGroupDecorator(_target, _key, descriptor) {\n    const originalMethod = descriptor.value;\n    if (Object.prototype.toString.call(originalMethod) === \"[object AsyncFunction]\") {\n      descriptor.value = async function (...args) {\n        console.group(label);\n        try {\n          const value = await originalMethod.apply(this, args);\n          console.groupEnd();\n          return value;\n        } catch (error) {\n          console.groupEnd();\n          throw error;\n        }\n      };\n    } else {\n      descriptor.value = function (...args) {\n        console.group(label);\n        try {\n          const value = originalMethod.apply(this, args);\n          console.groupEnd();\n          return value;\n        } catch (error) {\n          console.groupEnd();\n        }\n      };\n    }\n    return descriptor;\n  };\n}\n","/**\n * @name measureExecution\n * @namespace method\n * @param {string} label Measure method execution using `console.time()`\n * @returns {Function}\n * @example\n * ```javascript\n * class Class {\n *   @measureExecution(\"long execution time\")\n *   hardTask() {\n *     let result = 0;\n *     for (let index = 0; index < 1_000_000_000; index++) {\n *       result += index;\n *     }\n *     return result;\n *   }\n * }\n * new Class().hardTask();\n * ```\n * @since 0.0.2\n */\nexport function measureExecution(label) {\n  return function measureExecutionDecorator(_target, _key, descriptor) {\n    const originalMethod = descriptor.value;\n    if (Object.prototype.toString.call(originalMethod) === \"[object AsyncFunction]\") {\n      descriptor.value = async function (...args) {\n        console.time(label);\n        try {\n          const value = await originalMethod.apply(this, args);\n          console.timeEnd(label);\n          return value;\n        } catch (error) {\n          console.timeEnd(label);\n          throw error;\n        }\n      };\n    } else {\n      descriptor.value = function (...args) {\n        console.time(label);\n        try {\n          const value = originalMethod.apply(this, args);\n          console.timeEnd(label);\n          return value;\n        } catch (error) {\n          console.timeEnd(label);\n          throw error;\n        }\n      };\n    }\n    return descriptor;\n  };\n}\n"],"names":["Instance","constructor","silent","target","key","original","Reflect","deleteProperty","defineProperty","configurable","enumerable","get","set","properties","instance","attempt","handlerFunction","attemptDecorator","_target","_key","descriptor","originalMethod","value","Object","prototype","toString","call","async","args","apply","this","undefined","catch","error","consoleGroup","label","consoleGroupDecorator","console","group","groupEnd","measureExecution","measureExecutionDecorator","time","timeEnd"],"mappings":"AAuBO,SAASA,SAASC,EAAaC,GAAS,GAC7C,MAAO,CAACC,EAAQC,KACd,GAAID,EAAOC,aAAgBH,EACzB,OAEF,IAAII,EAAWF,EAAOC,GACtBE,QAAQC,eAAeJ,EAAQC,GAC/BE,QAAQE,eAAeL,EAAQC,EAAK,CAClCK,cAAc,EACdC,YAAY,EACZC,IAAK,IAAMN,EACXO,IAAMC,IACJ,GAAIX,EACF,IACEG,EAAW,IAAIJ,EAAYY,GAC3B,YAIFR,EAAW,IAAIJ,EAAYY,OA8B9B,SAASC,SAASb,EAAaC,GAAS,GAC7C,OAAOF,SAASC,EAAaC,GCpDxB,SAASa,QAAQC,GACtB,OAAO,SAASC,iBAAiBC,EAASC,EAAMC,GAC9C,MAAMC,EAAiBD,EAAWE,MACqB,2BAAnDC,OAAOC,UAAUC,SAASC,KAAKL,GACjCD,EAAWE,MAAQK,kBAAmBC,GACpC,IACE,MAAMN,QAAcD,EAAeQ,MAAMC,KAAMF,GAI/C,YAHcG,IAAVT,GAAuBA,EAAMU,OAC/BV,EAAMU,MAAOC,GAAUjB,EAAgBiB,EAAOL,IAEzCN,EACP,MAAOW,GACPjB,EAAgBiB,EAAOL,KAI3BR,EAAWE,MAAQ,YAAaM,GAC9B,IACE,OAAOP,EAAeQ,MAAMC,KAAMF,GAClC,MAAOK,GACPjB,EAAgBiB,EAAOL,MCnB1B,SAASM,aAAaC,GAC3B,OAAO,SAASC,sBAAsBlB,EAASC,EAAMC,GACnD,MAAMC,EAAiBD,EAAWE,MAyBlC,MAxBuD,2BAAnDC,OAAOC,UAAUC,SAASC,KAAKL,GACjCD,EAAWE,MAAQK,kBAAmBC,GACpCS,QAAQC,MAAMH,GACd,IACE,MAAMb,QAAcD,EAAeQ,MAAMC,KAAMF,GAE/C,OADAS,QAAQE,WACDjB,EACP,MAAOW,GAEP,MADAI,QAAQE,WACFN,IAIVb,EAAWE,MAAQ,YAAaM,GAC9BS,QAAQC,MAAMH,GACd,IACE,MAAMb,EAAQD,EAAeQ,MAAMC,KAAMF,GAEzC,OADAS,QAAQE,WACDjB,EACP,MAAOW,GACPI,QAAQE,aAIPnB,GC5BJ,SAASoB,iBAAiBL,GAC/B,OAAO,SAASM,0BAA0BvB,EAASC,EAAMC,GACvD,MAAMC,EAAiBD,EAAWE,MA0BlC,MAzBuD,2BAAnDC,OAAOC,UAAUC,SAASC,KAAKL,GACjCD,EAAWE,MAAQK,kBAAmBC,GACpCS,QAAQK,KAAKP,GACb,IACE,MAAMb,QAAcD,EAAeQ,MAAMC,KAAMF,GAE/C,OADAS,QAAQM,QAAQR,GACTb,EACP,MAAOW,GAEP,MADAI,QAAQM,QAAQR,GACVF,IAIVb,EAAWE,MAAQ,YAAaM,GAC9BS,QAAQK,KAAKP,GACb,IACE,MAAMb,EAAQD,EAAeQ,MAAMC,KAAMF,GAEzC,OADAS,QAAQM,QAAQR,GACTb,EACP,MAAOW,GAEP,MADAI,QAAQM,QAAQR,GACVF,IAILb"}